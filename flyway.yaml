apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: dummypipeline
spec:
  workspaces:
    - name: space
    - name: ssh-creds
  tasks:
  - name: fwvaultval
    taskRef:
      name: fwvaultval
    workspaces:
    - name: space
      workspace: space
    params:
      - name: subdirectory
        value: secrets
      - name: vault_path
        value: OBEM/flyway
  - name: fetch-source
    taskRef:
      name: git-clone
    runAfter:
      - fwvaultval
    workspaces:
    - name: output
      workspace: space
    - name: basic-auth
      workspace: ssh-creds
    params:
    - name: url
      value: https://jcidata.visualstudio.com/DefaultCollection/JEM%202.0/_git/JCI.OBEM.Postgres.Scripts.Sql
    - name: deleteExisting
      value: false
    - name: revision
      value: tekton_obem_master
  - name: arr0
    taskRef:
      name: flyway
    runAfter:
      - fetch-source
    workspaces:
    - name: space
      workspace: space
    matrix:
      params:
        - name: flyway-db
          value: ["Master_Copy","obemdev-entityapi-Backnet-db","obemdev-entityapi-connector_integration-db","obemdev-entityapi-corkireland-db","obemdev-entityapi-Gantner-db"]
  - name: arr1
    taskRef:
      name: flyway
    runAfter:
      - arr0
    workspaces:
    - name: space
      workspace: space
    matrix:
      params:
        - name: flyway-db
          value: ["obemdev-entityapi-obac_dev-db","obemdev-entityapi-OBC_Voltus-db","obemdev-entityapi-obes_integration-db","obemdev-entityapi-Vertiv-db"]
  finally:
  - name: task3  # this task verifies the status of dag tasks, it fails if verification fails
    params:
      - name: task1Status
        value: "$(tasks.arr0.status)"
      - name: task2Status
        value: "$(tasks.arr1.status)"
    taskSpec:
      params:
        - name: task1Status
        - name: task2Status
      steps:
        - image: alpine
          name: verify-dag-task-status
          script: |
            echo "$(params.task1Status)" 
            echo "$(params.task2Status)"

              
